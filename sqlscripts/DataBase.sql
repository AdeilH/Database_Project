-- MySQL Script generated by MySQL Workbench
-- Sat 06 May 2023 01:43:28 AM PKT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema HomeServices
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `HomeServices` ;

-- -----------------------------------------------------
-- Schema HomeServices
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `HomeServices` ;
USE `HomeServices` ;

-- -----------------------------------------------------
-- Table `HomeServices`.`Services`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HomeServices`.`Services` ;

CREATE TABLE IF NOT EXISTS `HomeServices`.`Services` (
  `services_id` INT NOT NULL AUTO_INCREMENT,
  `service` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`services_id`),
  UNIQUE INDEX `service_UNIQUE` (`service` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HomeServices`.`Customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HomeServices`.`Customers` ;

CREATE TABLE IF NOT EXISTS `HomeServices`.`Customers` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `email_address` VARCHAR(255) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `address_id` INT GENERATED ALWAYS AS (0),
  `total_expenditure` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`customer_id`),
  UNIQUE INDEX `email_address_UNIQUE` (`email_address` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HomeServices`.`ServiceProviders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HomeServices`.`ServiceProviders` ;

CREATE TABLE IF NOT EXISTS `HomeServices`.`ServiceProviders` (
  `provider_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `service_id` INT NOT NULL,
  `email_address` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`provider_id`),
  INDEX `service_id_idx` (`service_id` ASC) VISIBLE,
  UNIQUE INDEX `email_address_UNIQUE` (`email_address` ASC) VISIBLE,
  CONSTRAINT `service_fk`
    FOREIGN KEY (`service_id`)
    REFERENCES `HomeServices`.`Services` (`services_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HomeServices`.`PaymentMethods`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HomeServices`.`PaymentMethods` ;

CREATE TABLE IF NOT EXISTS `HomeServices`.`PaymentMethods` (
  `method_id` INT NOT NULL AUTO_INCREMENT,
  `payment_method` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`method_id`),
  UNIQUE INDEX `payment_method_UNIQUE` (`payment_method` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HomeServices`.`Payments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HomeServices`.`Payments` ;

CREATE TABLE IF NOT EXISTS `HomeServices`.`Payments` (
  `payment_id` INT NOT NULL AUTO_INCREMENT,
  `method_id` INT NOT NULL,
  `totalPayment` DOUBLE NOT NULL,
  `Discount` DOUBLE NULL DEFAULT 0.00,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`payment_id`),
  INDEX `method_id_idx` (`method_id` ASC) VISIBLE,
  INDEX `customer_fk_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `method_fk`
    FOREIGN KEY (`method_id`)
    REFERENCES `HomeServices`.`PaymentMethods` (`method_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `customerpayment_fk`
    FOREIGN KEY (`customer_id`)
    REFERENCES `HomeServices`.`Customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HomeServices`.`Orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HomeServices`.`Orders` ;

CREATE TABLE IF NOT EXISTS `HomeServices`.`Orders` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `customer_id` INT NOT NULL,
  `provider_id` INT NOT NULL,
  `payment_id` INT NOT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `payment_id_idx` (`payment_id` ASC) VISIBLE,
  INDEX `provider_id_idx` (`provider_id` ASC) VISIBLE,
  INDEX `customer_id_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `customer_fk`
    FOREIGN KEY (`customer_id`)
    REFERENCES `HomeServices`.`Customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `provider_fk`
    FOREIGN KEY (`provider_id`)
    REFERENCES `HomeServices`.`ServiceProviders` (`provider_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `payment_fk`
    FOREIGN KEY (`payment_id`)
    REFERENCES `HomeServices`.`Payments` (`payment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HomeServices`.`Addresses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HomeServices`.`Addresses` ;

CREATE TABLE IF NOT EXISTS `HomeServices`.`Addresses` (
  `address_id` INT NOT NULL AUTO_INCREMENT,
  `customer_id` INT NOT NULL,
  `line1` VARCHAR(45) NOT NULL,
  `line2` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(2) NOT NULL,
  `zip_code` VARCHAR(20) NOT NULL,
  `phone` VARCHAR(12) NOT NULL,
  `disabled` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`address_id`),
  INDEX `customer_id_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `addresses_fk_customers`
    FOREIGN KEY (`customer_id`)
    REFERENCES `HomeServices`.`Customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `HomeServices` ;

-- -----------------------------------------------------
-- Placeholder table for view `HomeServices`.`OrderDetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HomeServices`.`OrderDetails` (`order_id` INT, `customer_email` INT, `provider_name` INT, `payment_method` INT, `totalPayment` INT, `Discount` INT);

-- -----------------------------------------------------
-- View `HomeServices`.`OrderDetails`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HomeServices`.`OrderDetails`;
DROP VIEW IF EXISTS `HomeServices`.`OrderDetails` ;
USE `HomeServices`;
CREATE  OR REPLACE VIEW OrderDetails AS
SELECT
    O.order_id,
    C.email_address AS customer_email,
    CONCAT(P.first_name, ' ', P.last_name) AS provider_name,
    PM.payment_method,
    PY.totalPayment,
    PY.Discount
FROM
    Orders O
    INNER JOIN Customers C ON O.customer_id = C.customer_id
    INNER JOIN ServiceProviders P ON O.provider_id = P.provider_id
    INNER JOIN Payments PY ON O.payment_id = PY.payment_id
    INNER JOIN PaymentMethods PM ON PY.method_id = PM.method_id;
USE `HomeServices`;

DELIMITER $$

USE `HomeServices`$$
DROP TRIGGER IF EXISTS `HomeServices`.`Payments_AFTER_INSERT` $$
USE `HomeServices`$$
CREATE DEFINER = CURRENT_USER TRIGGER `HomeServices`.`Payments_AFTER_INSERT` 
AFTER INSERT ON `Payments` 
FOR EACH ROW
BEGIN
	DECLARE customer_id INT;
    DECLARE total_payment DOUBLE;
    
    -- Get the customer_id and totalPayment for the inserted payment
    SELECT NEW.customer_id, NEW.totalPayment INTO customer_id, total_payment;

    
    -- Update the total_expenditure in the Customers table
    UPDATE Customers
    SET total_expenditure = total_expenditure + total_payment
    WHERE Customers.customer_id = customer_id;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
